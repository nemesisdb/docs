"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[4411],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>h});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,h=d["".concat(o,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(h,s(s({ref:t},c),{},{components:n})):r.createElement(h,s({ref:t},c))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,s=new Array(i);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[d]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<i;p++)s[p]=n[p];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},9047:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:40,displayed_sidebar:"clientApisSidebar"},s="sh_add",l={unversionedId:"client_apis/python/sh/sh_add",id:"client_apis/python/sh/sh_add",title:"sh_add",description:"Stores keys but does not overwrite a key if it already exists.",source:"@site/docs/client_apis/python/sh/sh_add.md",sourceDirName:"client_apis/python/sh",slug:"/client_apis/python/sh/sh_add",permalink:"/client_apis/python/sh/sh_add",draft:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40,displayed_sidebar:"clientApisSidebar"},sidebar:"clientApisSidebar",previous:{title:"sh_get",permalink:"/client_apis/python/sh/sh_get"},next:{title:"sh_rmv",permalink:"/client_apis/python/sh/sh_rmv"}},o={},p=[{value:"Returns",id:"returns",level:2},{value:"Examples",id:"examples",level:2}],c={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(d,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sh_add"},"sh_add"),(0,a.kt)("p",null,"Stores keys but does not overwrite a key if it already exists."),(0,a.kt)("p",null,"To overwrite an existing key, use ",(0,a.kt)("a",{parentName:"p",href:"./sh_set"},"sh_set"),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Param"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"keys"),(0,a.kt)("td",{parentName:"tr",align:"center"},"tuple"),(0,a.kt)("td",{parentName:"tr",align:null},"Tuple of keys to retrieve"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Y")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"tkn"),(0,a.kt)("td",{parentName:"tr",align:"center"},"int"),(0,a.kt)("td",{parentName:"tr",align:null},"Session token"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Y")))),(0,a.kt)("p",null,"If a key already exists it is not considered an error."),(0,a.kt)("h2",{id:"returns"},"Returns"),(0,a.kt)("p",null,"None"),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Avoid overwriting'",title:"'Avoid","overwriting'":!0},"client = NdbClient()\nawait client.open('ws://127.0.0.1:1987/')\n\nawait client.sh_set({'LinuxDistro':'Arch'})\nvalues = await client.sh_get(('LinuxDistro',))\nprint(f'Before add(): {values}')\n\nawait client.sh_add({'LinuxDistro':'Arch btw'})\nvalues = await client.sh_get(('LinuxDistro',))\nprint(f'After add(): {values}')\n\nawait client.sh_set({'LinuxDistro':'Arch btw'})\nvalues = await client.sh_get(('LinuxDistro',))\nprint(f'After set(): {values}')\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sh_add()")," does not overwrite keys"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"sh_set()")," does overwrite keys")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Before add(): {'LinuxDistro': 'Arch'}\nAfter add(): {'LinuxDistro': 'Arch'}\nAfter set(): {'LinuxDistro': 'Arch btw'}\n")))}u.isMDXComponent=!0}}]);