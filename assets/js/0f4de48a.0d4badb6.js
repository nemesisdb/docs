"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[8554],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,v=c["".concat(o,".").concat(m)]||c[m]||d[m]||s;return n?r.createElement(v,i(i({ref:t},u),{},{components:n})):r.createElement(v,i({ref:t},u))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var p=2;p<s;p++)i[p]=n[p];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4678:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const s={sidebar_position:3,displayed_sidebar:"clientApisSidebar",sidebar_label:"get"},i="get",l={unversionedId:"client_apis/python/Get",id:"client_apis/python/Get",title:"get",description:"Retrieves keys from the database.",source:"@site/docs/client_apis/python/Get.md",sourceDirName:"client_apis/python",slug:"/client_apis/python/Get",permalink:"/client_apis/python/Get",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,displayed_sidebar:"clientApisSidebar",sidebar_label:"get"},sidebar:"clientApisSidebar",previous:{title:"set",permalink:"/client_apis/python/Set"},next:{title:"add",permalink:"/client_apis/python/Add"}},o={},p=[{value:"Returns",id:"returns",level:2},{value:"Examples",id:"examples",level:2},{value:"KV",id:"kv",level:3},{value:"Session",id:"session",level:3}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"get"},"get"),(0,a.kt)("p",null,"Retrieves keys from the database."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Param"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"keys"),(0,a.kt)("td",{parentName:"tr",align:"center"},"tuple"),(0,a.kt)("td",{parentName:"tr",align:null},"Tuple of keys to retrieve"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Y")))),(0,a.kt)("h2",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"dict")," - key/value pairs"),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("h3",{id:"kv"},"KV"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Set various'",title:"'Set","various'":!0},'client = KvClient()\nawait client.open(\'ws://127.0.0.1:1987/\')\n\ndata = {  "server_ip":"123.456.7.8",\n          "server_port":1987,\n          "server_users":\n          {\n            "admins":["user1", "user2"],\n            "banned":["user3"]\n          }\n        }\n\nawait client.set(data):\nvalues = await client.get((\'server_users\', \'server_port\'))\nprint(values)\n')),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{'server_users': {'admins': ['user1', 'user2'], 'banned': ['user3']}, 'server_port': 1987}\n")),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Overwrite'",title:"'Overwrite'"},'client = KvClient()\nawait client.open(\'ws://127.0.0.1:1987/\')\n\ndata = {  "server_ip":"123.456.7.8",\n          "server_port":1987,\n          "server_users":\n          {\n            "admins":["user1", "user2"],\n            "banned":["user3"]\n          }\n        }\n\nawait client.set(data):\nvalues = await client.get((\'server_users\', \'server_port\'))\n\nprint(values)\n\n# update and call set() to overwrite\nvalues[\'server_port\'] = 7891\nvalues[\'server_users\'][\'banned\'] = []\nawait client.set(values)\n\nvalues = await client.get((\'server_users\', \'server_port\'))\nprint(values)\n')),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Initial: {'server_users': {'admins': ['user1', 'user2'], 'banned': ['user3']}, 'server_port': 1987}\nUpdated: {'server_users': {'admins': ['user1', 'user2'], 'banned': []}, 'server_port': 7891}\n")),(0,a.kt)("h3",{id:"session"},"Session"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"from ndb.sessionclient import SessionClient, Session\n\n\nclient = SessionClient()\nawait client.open('ws://127.0.0.1:1987/')\n\n# create session, which returns a Session, containing the token (tkn)\nsession = await client.create_session()\n# set keys, username and password\nawait client.set({'username':'billy', 'password':'billy_passy'}, session.tkn)\n# retrieve the keys\nvalues = await client.get(('username','password'), session.tkn)\nprint(values)\n\n# delete the session when finished\n# if the session was created with expiry settings, it will delete when it expires\nawait client.end_session(session.tkn)\n")))}d.isMDXComponent=!0}}]);