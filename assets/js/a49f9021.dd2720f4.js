"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[9165],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var d=a.createContext({}),o=function(e){var t=a.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=o(e.components);return a.createElement(d.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,d=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),c=o(n),u=r,h=c["".concat(d,".").concat(u)]||c[u]||m[u]||i;return n?a.createElement(h,l(l({ref:t},p),{},{components:n})):a.createElement(h,l({ref:t},p))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=u;var s={};for(var d in t)hasOwnProperty.call(t,d)&&(s[d]=t[d]);s.originalType=e,s[c]="string"==typeof e?e:r,l[1]=s;for(var o=2;o<i;o++)l[o]=n[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2281:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>l,default:()=>m,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:40,displayed_sidebar:"clientApisSidebar"},l="add_head",s={unversionedId:"client_apis/python/lst/add_head",id:"client_apis/python/lst/add_head",title:"add_head",description:"|Param|Description|",source:"@site/docs/client_apis/python/lst/add_head.md",sourceDirName:"client_apis/python/lst",slug:"/client_apis/python/lst/add_head",permalink:"/client_apis/python/lst/add_head",draft:!1,tags:[],version:"current",sidebarPosition:40,frontMatter:{sidebar_position:40,displayed_sidebar:"clientApisSidebar"},sidebar:"clientApisSidebar",previous:{title:"add",permalink:"/client_apis/python/lst/add"},next:{title:"add_tail",permalink:"/client_apis/python/lst/add_tail"}},d={},o=[{value:"Raises",id:"raises",level:2},{value:"Examples",id:"examples",level:2}],p={toc:o},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"add_head"},"add_head"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"async def add_head(name: str, items=list[dict]|dict) -> None:\n")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Param"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"name"),(0,r.kt)("td",{parentName:"tr",align:null},"Name of the list")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"items"),(0,r.kt)("td",{parentName:"tr",align:null},"- Single item: dictionary",(0,r.kt)("br",null),"- Multiple times: A list of dictionaries")))),(0,r.kt)("p",null,"The item(s) are inserted into at the head:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"adding a single item, the item becomes the head"),(0,r.kt)("li",{parentName:"ul"},"adding multiple items, the first item becomes the head")),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"add_head()")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"remove_head()")," can be called to use a list as a stack."),(0,r.kt)("h2",{id:"raises"},"Raises"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"ResponseError"),(0,r.kt)("ul",{parentName:"li"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"name")," does not exist")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='List as a stack'",title:"'List",as:!0,a:!0,"stack'":!0},"client = NdbClient()\nawait client.open('ws://127.0.0.1:1987/')\n\nlists = ObjLists(client)\n\nawait lists.create('stack')\n\nprint('Push')\nawait lists.add_head('stack', {'name':'first'})\nawait lists.add_head('stack', {'name':'second'})\nawait lists.add_head('stack', {'name':'third'})\n\nfor item in await lists.get_rng('stack', start=0):\n  print(item)\n\nprint('Pop')\nawait lists.remove_head('stack')\n\nfor item in await lists.get_rng('stack', start=0):\n  print(item)\n")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"Push\n{'name': 'third'}\n{'name': 'second'}\n{'name': 'first'}\nPop\n{'name': 'second'}\n{'name': 'first'}\n")))}m.isMDXComponent=!0}}]);