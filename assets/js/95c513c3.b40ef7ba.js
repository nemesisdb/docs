"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[233],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),u=p(n),d=a,k=u["".concat(o,".").concat(d)]||u[d]||c[d]||i;return n?r.createElement(k,l(l({ref:t},m),{},{components:n})):r.createElement(k,l({ref:t},m))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=d;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:a,l[1]=s;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3191:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>c,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:20},l="TS_GET_MULTI",s={unversionedId:"api/ts/ts-get-multi",id:"api/ts/ts-get-multi",title:"TS_GET_MULTI",description:"Search multiple time series, returning time and event values for each. It is an alternative to issuing multiple TS_GET commands for different series.",source:"@site/docs/api/ts/ts-get-multi.md",sourceDirName:"api/ts",slug:"/api/ts/ts-get-multi",permalink:"/api/ts/ts-get-multi",draft:!1,tags:[],version:"current",sidebarPosition:20,frontMatter:{sidebar_position:20},sidebar:"apiSidebar",previous:{title:"TS_GET",permalink:"/api/ts/ts-get"}},o={},p=[{value:"Examples",id:"examples",level:2},{value:"Response",id:"response",level:2}],m={toc:p},u="wrapper";function c(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ts_get_multi"},"TS_GET_MULTI"),(0,a.kt)("p",null,"Search multiple time series, returning time and event values for each. It is an alternative to issuing multiple ",(0,a.kt)("a",{parentName:"p",href:"./ts-get"},(0,a.kt)("inlineCode",{parentName:"a"},"TS_GET"))," commands for different series."),(0,a.kt)("p",null,"This is functionaly the same as ",(0,a.kt)("inlineCode",{parentName:"p"},"TS_GET")," but the time series request and response terms are set separately to allow different terms for each."),(0,a.kt)("p",null,"The general form is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET_MULTI":\n  {\n    "seriesName1":\n    {\n      "rng":[min, max],\n      "where":\n      {\n        // terms\n      }\n    },\n    "seriesName2":\n    {\n      "rng":[min, max],\n      "where":\n      {\n        // terms\n      }\n    },\n    "seriesNameN":\n    {\n      "rng":[min, max],\n      "where":\n      {\n        // terms\n      }\n    }\n  }\n}\n')),(0,a.kt)("p",null,"Within each series:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Param"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"rng"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Array of ",(0,a.kt)("strong",{parentName:"td"},"zero or two")," times"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Empty array means search all times, otherwise a min and max are provided. The min and max are inclusive")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"where"),(0,a.kt)("td",{parentName:"tr",align:"center"},"One or multiple object"),(0,a.kt)("td",{parentName:"tr",align:"left"},(0,a.kt)("strong",{parentName:"td"},"Optional")," ",(0,a.kt)("br",null),"Each object key is the name of an event member which must be indexed, see below for details")))),(0,a.kt)("br",null),(0,a.kt)("admonition",{type:"note"},(0,a.kt)("p",{parentName:"admonition"},"This is the same as ",(0,a.kt)("inlineCode",{parentName:"p"},"TS_GET")," but with ",(0,a.kt)("inlineCode",{parentName:"p"},"ts")," omitted.")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Return alarms triggered and users who were granted access between times 100 to 1000 inclusive:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET_MULTI":\n  {\n    "alarm_activity":\n    {\n      "rng":[100,1000],\n      "where":\n      {\n        "triggered":\n        {\n          "==":true\n        }\n      }\n    },\n    "user_activity":\n    {\n      "rng":[100,1000],\n      "where":\n      {\n        "action":\n        {\n          "==":"AccessGranted"\n        }\n      }\n    }  \n  }\n}\n')),(0,a.kt)("br",null),(0,a.kt)("h2",{id:"response"},"Response"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"TS_GET_MULTI_RSP")),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"./../TS-Statuses"},"response status")," page for status values."),(0,a.kt)("p",null,"An object per time series, with the key being the time series name. The contents is the same as ",(0,a.kt)("inlineCode",{parentName:"p"},"TS_GET_RSP")," but without ",(0,a.kt)("inlineCode",{parentName:"p"},"ts"),":"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Param"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Meaning"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"st"),(0,a.kt)("td",{parentName:"tr",align:"left"},"unsigned int"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Status")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"t"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Array of times"),(0,a.kt)("td",{parentName:"tr",align:"left"},"The times meeting the criteria")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"evt"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Array of objects"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Each object is an event. The event at ",(0,a.kt)("inlineCode",{parentName:"td"},"evt[i]")," occured at time ",(0,a.kt)("inlineCode",{parentName:"td"},"t[i]"))))),(0,a.kt)("p",null,"Possible status values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Ok"),(0,a.kt)("li",{parentName:"ul"},"SeriesNotExist"),(0,a.kt)("li",{parentName:"ul"},"NotIndexed")),(0,a.kt)("p",null,"For example, the response to the above request could be:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET_MULTI_RSP":\n  {\n    "alarm_activity":\n    {\n      "st":1,\n      "t":[105, 200],\n      "evt":\n      [\n        {"triggered":true, "reason":"Opened"},\n        {"triggered":true, "reason":"Thermal"}\n      ]\n    },\n    "user_activity":\n    {\n      "st":1,\n      "t":[100],\n      "evt":\n      [\n        {"entrance":"Lab 12", "ident":"PIN", "user":"Dr Jones"}\n      ]\n    }  \n  }\n}\n')))}c.isMDXComponent=!0}}]);