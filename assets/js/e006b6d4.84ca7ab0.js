"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[8623],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),o=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=o(n),v=a,k=c["".concat(p,".").concat(v)]||c[v]||d[v]||s;return n?r.createElement(k,i(i({ref:t},u),{},{components:n})):r.createElement(k,i({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=v;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:a,i[1]=l;for(var o=2;o<s;o++)i[o]=n[o];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},9672:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>o});var r=n(7462),a=(n(7294),n(3905));const s={sidebar_position:2,displayed_sidebar:"clientApisSidebar",sidebar_label:"kv_set"},i="kv_set",l={unversionedId:"client_apis/python/kv/Set",id:"client_apis/python/kv/Set",title:"kv_set",description:"Store keys to the database.",source:"@site/docs/client_apis/python/kv/Set.md",sourceDirName:"client_apis/python/kv",slug:"/client_apis/python/kv/Set",permalink:"/client_apis/python/kv/Set",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,displayed_sidebar:"clientApisSidebar",sidebar_label:"kv_set"},sidebar:"clientApisSidebar",previous:{title:"Quick Start",permalink:"/client_apis/python/kv/Quick-Start"},next:{title:"kv_get",permalink:"/client_apis/python/kv/Get"}},p={},o=[{value:"Raises",id:"raises",level:2},{value:"Examples",id:"examples",level:2}],u={toc:o},c="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kv_set"},"kv_set"),(0,a.kt)("p",null,"Store keys to the database."),(0,a.kt)("p",null,"Existing keys are overwritten, to avoid this use ",(0,a.kt)("a",{parentName:"p",href:"./Add"},"kv_add"),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"kv_set(keys: dict) -> None\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Param"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"keys"),(0,a.kt)("td",{parentName:"tr",align:null},"Key/values to store")))),(0,a.kt)("h2",{id:"raises"},"Raises"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ResponseError")," if query fails")),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Connect'",title:"'Connect'"},"from ndb.client import NdbClient\n\nclient = NdbClient(debug=False) # toggle for debug\nawait client.open('ws://127.0.0.1:1987/')\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Set scalar'",title:"'Set","scalar'":!0},"\nawait client.kv_set({'username':'billy', 'password':'billy_passy'})\n\nvalue = await client.kv_get(key='username')\nprint (value)\n\n# get multiple keys, returns a dict of key:value\nvalues = await client.kv_get(keys=('username', 'password'))\nprint (values)\n")),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Set object'",title:"'Set","object'":!0},'data = {  "server_ip":"123.456.7.8",\n          "server_port":1987,\n          "server_users":\n          {\n            "admins":["user1", "user2"],\n            "banned":["user3"]\n          }\n        }\n\nawait client.kv_set(data)\nvalue = await client.kv_get(key=\'server_users\')\nprint(value)\n\nvalues = await client.kv_get(keys=(\'server_ip\', \'server_port\'))\nprint(values)\n')),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"{'admins': ['user1', 'user2'], 'banned': ['user3']}\n{'server_ip': '123.456.7.8', 'server_port': 1987}\n")),(0,a.kt)("br",null),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Overwrite'",title:"'Overwrite'"},"data = {\n          \"server_ip\":\"123.456.7.8\",\n          \"server_port\":1987,\n          \"server_users\":\n          {\n            \"admins\":[\"user1\", \"user2\"],\n            \"banned\":[\"user3\"]\n          }\n       }\n\nawait client.kv_set(data)\nvalues = await client.kv_get(keys=('server_users', 'server_port'))\n\nprint(f'Initial: {values}')\n\n# update and call set() to overwrite\nvalues['server_port'] = 7891\nvalues['server_users']['banned'] = []\n\nawait client.kv_set(values)\n\nvalues = await client.kv_get(keys=('server_users', 'server_port'))\nprint(f'Updated: {values}')\n")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Initial: {'server_port': 1987, 'server_users': {'admins': ['user1', 'user2'], 'banned': ['user3']}}\nUpdated: {'server_port': 7891, 'server_users': {'admins': ['user1', 'user2'], 'banned': []}}\n")),(0,a.kt)("p",null,"See ",(0,a.kt)("a",{parentName:"p",href:"./Get"},"kv_get"),"."))}d.isMDXComponent=!0}}]);