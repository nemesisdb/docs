"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[1675],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function s(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){s(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,a,s=function(e,t){if(null==e)return{};var n,a,s={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(s[n]=e[n]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(s[n]=e[n])}return s}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},m=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,s=e.mdxType,r=e.originalType,o=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),d=p(n),k=s,c=d["".concat(o,".").concat(k)]||d[k]||u[k]||r;return n?a.createElement(c,l(l({ref:t},m),{},{components:n})):a.createElement(c,l({ref:t},m))}));function c(e,t){var n=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=n.length,l=new Array(r);l[0]=k;var i={};for(var o in t)hasOwnProperty.call(t,o)&&(i[o]=t[o]);i.originalType=e,i[d]="string"==typeof e?e:s,l[1]=i;for(var p=2;p<r;p++)l[p]=n[p];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},1783:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>u,frontMatter:()=>r,metadata:()=>i,toc:()=>p});var a=n(7462),s=(n(7294),n(3905));const r={sidebar_position:30},l="SH_LOAD",i={unversionedId:"api/sessions/sh-load",id:"api/sessions/sh-load",title:"SH_LOAD",description:"Loads data from the filesystem at runtime as an alternative to loading data at startup.",source:"@site/docs/api/sessions/sh-load.md",sourceDirName:"api/sessions",slug:"/api/sessions/sh-load",permalink:"/api/sessions/sh-load",draft:!1,tags:[],version:"current",sidebarPosition:30,frontMatter:{sidebar_position:30},sidebar:"apiSidebar",previous:{title:"SH_SAVE",permalink:"/api/sessions/sh-save"},next:{title:"Key Value",permalink:"/category/key-value"}},o={},p=[{value:"Response",id:"response",level:2},{value:"Examples",id:"examples",level:2},{value:"Single Dataset",id:"single-dataset",level:3},{value:"Multiple Datasets",id:"multiple-datasets",level:3}],m={toc:p},d="wrapper";function u(e){let{components:t,...n}=e;return(0,s.kt)(d,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"sh_load"},"SH_LOAD"),(0,s.kt)("p",null,"Loads data from the filesystem at runtime as an alternative to loading data at startup."),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"The data is read from the ",(0,s.kt)("inlineCode",{parentName:"li"},"session::save::path")," set in the config file"),(0,s.kt)("li",{parentName:"ul"},"This command is available even if ",(0,s.kt)("inlineCode",{parentName:"li"},"session::save::enabled")," is ",(0,s.kt)("inlineCode",{parentName:"li"},"false"))),(0,s.kt)("p",null,"Restored sessions retain their shared and expiry settings. If a session has expiry settings, the expiry time is set to ",(0,s.kt)("inlineCode",{parentName:"p"},"now + duration"),"."),(0,s.kt)("br",null),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Param"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Meaning"),(0,s.kt)("th",{parentName:"tr",align:"center"},"Required"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},"names"),(0,s.kt)("td",{parentName:"tr",align:"left"},"array of strings"),(0,s.kt)("td",{parentName:"tr",align:"left"},"Dataset names as previously used in ",(0,s.kt)("inlineCode",{parentName:"td"},"SH_SAVE")),(0,s.kt)("td",{parentName:"tr",align:"center"},"Y")))),(0,s.kt)("br",null),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"If a session is loaded that already exists, the existing session is not changed")),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"response"},"Response"),(0,s.kt)("p",null,(0,s.kt)("inlineCode",{parentName:"p"},"SH_LOAD_RSP")),(0,s.kt)("p",null,"If a name does not exist the response is in form:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Dataset does not exist"',title:'"Dataset',does:!0,not:!0,'exist"':!0},'{\n  "SH_LOAD_RSP":\n  {\n    "st": 142,\n    "m": "<name> does not exist"\n  }\n}\n')),(0,s.kt)("p",null,"Where ",(0,s.kt)("inlineCode",{parentName:"p"},"<name>")," is the name that does not exist."),(0,s.kt)("br",null),(0,s.kt)("p",null,"Otherwise, the response is in form:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "SH_LOAD_RSP":\n  {\n    "<name1>":\n    {\n      "st":<status>,\n      "keys":<keys>,\n      "sessions":<sessions>,\n      "m":<msg>\n    },\n    "<name2>":\n    {\n      "st":<status>,\n      "keys":<keys>,\n      "sessions":<sessions>,\n      "m":<msg>\n    },\n    "<nameN>":\n    {\n      "st":<status>,\n      "keys":<keys>,\n      "sessions":<sessions>,\n      "m":<msg>\n    }\n  }\n}\n')),(0,s.kt)("br",null),(0,s.kt)("table",null,(0,s.kt)("thead",{parentName:"table"},(0,s.kt)("tr",{parentName:"thead"},(0,s.kt)("th",{parentName:"tr",align:"left"},"Param"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,s.kt)("th",{parentName:"tr",align:"left"},"Meaning"))),(0,s.kt)("tbody",{parentName:"table"},(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},"st"),(0,s.kt)("td",{parentName:"tr",align:"left"},"unsigned int"),(0,s.kt)("td",{parentName:"tr",align:"left"},"Status")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},"sessions"),(0,s.kt)("td",{parentName:"tr",align:"left"},"unsigned int"),(0,s.kt)("td",{parentName:"tr",align:"left"},"Number of sessions loaded")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},"keys"),(0,s.kt)("td",{parentName:"tr",align:"left"},"unsigned int"),(0,s.kt)("td",{parentName:"tr",align:"left"},"Number of keys loaded")),(0,s.kt)("tr",{parentName:"tbody"},(0,s.kt)("td",{parentName:"tr",align:"left"},"m"),(0,s.kt)("td",{parentName:"tr",align:"left"},"string"),(0,s.kt)("td",{parentName:"tr",align:"left"},"Error message. Empty if ",(0,s.kt)("inlineCode",{parentName:"td"},"st")," is ",(0,s.kt)("inlineCode",{parentName:"td"},"LoadComplete"))))),(0,s.kt)("br",null),(0,s.kt)("p",null,"Possible values for ",(0,s.kt)("inlineCode",{parentName:"p"},"st"),":"),(0,s.kt)("ul",null,(0,s.kt)("li",{parentName:"ul"},"CommandSyntax (",(0,s.kt)("inlineCode",{parentName:"li"},"names")," not present or not an array)"),(0,s.kt)("li",{parentName:"ul"},"ValueTypeInvalid (member of ",(0,s.kt)("inlineCode",{parentName:"li"},"names")," is not a string)"),(0,s.kt)("li",{parentName:"ul"},"LoadError (",(0,s.kt)("inlineCode",{parentName:"li"},"m")," contains error message)"),(0,s.kt)("li",{parentName:"ul"},"LoadComplete (",(0,s.kt)("inlineCode",{parentName:"li"},"m")," is empty)")),(0,s.kt)("p",null,"See ",(0,s.kt)("a",{parentName:"p",href:"./../Statuses"},"response status")," for status values."),(0,s.kt)("br",null),(0,s.kt)("h2",{id:"examples"},"Examples"),(0,s.kt)("h3",{id:"single-dataset"},"Single Dataset"),(0,s.kt)("p",null,"With a database of data we save all sessions:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "SH_SAVE":\n  {\n    "name":"dump1"\n  }\n}\n')),(0,s.kt)("p",null,"Some time later after a restart or the data has been deleted:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Restore"',title:'"Restore"'},'{\n  "SH_LOAD":\n  {\n    "names":["dump1"]\n  }\n}\n')),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{\n  "SH_LOAD_RSP":\n  {\n    "dump1":\n    {\n      "st": 141,\n      "sessions": 10,\n      "keys": 50\n    }\n  }\n}\n')),(0,s.kt)("h3",{id:"multiple-datasets"},"Multiple Datasets"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="dump2 exists but has no data"',title:'"dump2',exists:!0,but:!0,has:!0,no:!0,'data"':!0},'{\n  "SH_LOAD":\n  {\n    "names":["dump1", "dump2"]\n  }\n}\n')),(0,s.kt)("p",null,"An empty dataset is not an error:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-json",metastring:'title="Response"',title:'"Response"'},'{\n  "SH_LOAD_RSP": {\n    "dump1": {\n      "m": "",\n      "sessions": 10,\n      "keys": 50,\n      "st": 141\n    },\n    "dump2": {\n      "m": "",\n      "sessions": 0,\n      "keys": 0,\n      "st": 141\n    }\n  }\n}\n')))}u.isMDXComponent=!0}}]);