"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[4419],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>k});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=i.createContext({}),p=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},c=function(e){var t=p(e.components);return i.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,k=u["".concat(o,".").concat(m)]||u[m]||d[m]||r;return n?i.createElement(k,s(s({ref:t},c),{},{components:n})):i.createElement(k,s({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[u]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<r;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},415:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var i=n(7462),a=(n(7294),n(3905));const r={sidebar_position:1,displayed_sidebar:"clientApisSidebar"},s="Quick Start",l={unversionedId:"client_apis/python/Overview",id:"client_apis/python/Overview",title:"Quick Start",description:"The API supports sessions being enabled or disabled.",source:"@site/docs/client_apis/python/Overview.md",sourceDirName:"client_apis/python",slug:"/client_apis/python/Overview",permalink:"/client_apis/python/Overview",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,displayed_sidebar:"clientApisSidebar"},sidebar:"clientApisSidebar",previous:{title:"Python",permalink:"/category/python"},next:{title:"set",permalink:"/client_apis/python/Set"}},o={},p=[{value:"Sessions Disabled",id:"sessions-disabled",level:2},{value:"Sessions Enabled",id:"sessions-enabled",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,i.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"quick-start"},"Quick Start"),(0,a.kt)("p",null,"The API supports sessions being enabled or disabled."),(0,a.kt)("h2",{id:"sessions-disabled"},"Sessions Disabled"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"import: ",(0,a.kt)("inlineCode",{parentName:"li"},"from ndb.kvclient import KvClient")),(0,a.kt)("li",{parentName:"ul"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"ndb.kvclient.Client")),(0,a.kt)("li",{parentName:"ul"},"Call ",(0,a.kt)("inlineCode",{parentName:"li"},"Client.open()")," to connect to the server"),(0,a.kt)("li",{parentName:"ul"},"Use functions such as ",(0,a.kt)("inlineCode",{parentName:"li"},"set()")," and ",(0,a.kt)("inlineCode",{parentName:"li"},"get()")),(0,a.kt)("li",{parentName:"ul"},"Ignore the ",(0,a.kt)("inlineCode",{parentName:"li"},"tkn")," argument, that's only relevant for sessions"),(0,a.kt)("li",{parentName:"ul"},"Functions return either a ",(0,a.kt)("inlineCode",{parentName:"li"},"bool")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"tuple"),":",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"If ",(0,a.kt)("inlineCode",{parentName:"li"},"bool"),", it indicates success"),(0,a.kt)("li",{parentName:"ul"},"If a ",(0,a.kt)("inlineCode",{parentName:"li"},"tuple"),", the first value is typically a ",(0,a.kt)("inlineCode",{parentName:"li"},"bool")," to indicate success")))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"client = KvClient()\nawait client.open('ws://127.0.0.1:1987/')\n\nsetSuccess = await client.set({'username':'billy', 'password':'billy_passy'})\n\nif setSuccess:\n  (getOk, values) = await client.get(('username',))\n  if getOk:\n    print(values)\n  else:\n    print('Query failed')\n")),(0,a.kt)("h2",{id:"sessions-enabled"},"Sessions Enabled"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create a ",(0,a.kt)("inlineCode",{parentName:"li"},"ndb.sessionclient.SessionClient")),(0,a.kt)("li",{parentName:"ul"},"Create a session with ",(0,a.kt)("inlineCode",{parentName:"li"},"SessionClient.create_session()")),(0,a.kt)("li",{parentName:"ul"},"This returns a ",(0,a.kt)("inlineCode",{parentName:"li"},"Session")," containing the token"),(0,a.kt)("li",{parentName:"ul"},"Use the key-value functions (",(0,a.kt)("inlineCode",{parentName:"li"},"set()"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"get()")," etc), but pass the ",(0,a.kt)("inlineCode",{parentName:"li"},"session.tkn"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"client = SessionClient()\nawait client.open('ws://127.0.0.1:1987/')\n\nsession = await client.create_session()\nassert session.isValid\n\nprint(f\"Session created with session token: {session.tkn}\")\n\n# set keys in the session\nok = await client.set({'fname':'James', 'sname':'smith'}, session.tkn)\nassert ok\n\n# retrieve\n(ok, values) = await client.get(('fname', 'sname'), session.tkn)\nassert ok\nprint(values)\n")))}d.isMDXComponent=!0}}]);