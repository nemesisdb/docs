"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[8461],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>f});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),p=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(o.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),u=p(n),m=a,f=u["".concat(o,".").concat(m)]||u[m]||d[m]||i;return n?r.createElement(f,l(l({ref:t},c),{},{components:n})):r.createElement(f,l({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=m;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[u]="string"==typeof e?e:a,l[1]=s;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},2751:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:60,displayed_sidebar:"clientApisSidebar"},l="get_rng",s={unversionedId:"client_apis/python/arr/get_rng",id:"client_apis/python/arr/get_rng",title:"get_rng",description:"stop is exclusive based.",source:"@site/docs/client_apis/python/arr/get_rng.md",sourceDirName:"client_apis/python/arr",slug:"/client_apis/python/arr/get_rng",permalink:"/client_apis/python/arr/get_rng",draft:!1,tags:[],version:"current",sidebarPosition:60,frontMatter:{sidebar_position:60,displayed_sidebar:"clientApisSidebar"},sidebar:"clientApisSidebar",previous:{title:"get",permalink:"/client_apis/python/arr/get"},next:{title:"clear",permalink:"/client_apis/python/arr/clear"}},o={},p=[{value:"Returns",id:"returns",level:2},{value:"Array Type Differences",id:"array-type-differences",level:2},{value:"Raises",id:"raises",level:2},{value:"Examples",id:"examples",level:2}],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"get_rng"},"get_rng"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"async def get_rng(name: str, start: int, stop = None) -> List[dict] | List[str] | List[int]\n")),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"stop")," is exclusive based."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Param"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"name"),(0,a.kt)("td",{parentName:"tr",align:null},"Name of the array")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"start"),(0,a.kt)("td",{parentName:"tr",align:null},"Position of the first item to retrieve")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"stop"),(0,a.kt)("td",{parentName:"tr",align:null},"The last index, exclusive")))),(0,a.kt)("h2",{id:"returns"},"Returns"),(0,a.kt)("p",null,"The items requested."),(0,a.kt)("h2",{id:"array-type-differences"},"Array Type Differences"),(0,a.kt)("p",null,"None"),(0,a.kt)("h2",{id:"raises"},"Raises"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ResponseError")," if query fails",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," does not exist"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start")," out of bounds"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ValueError")," caught before query is sent",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"name")," is empty"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"start > stop"))))),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"This is for illustration only, this is best achieved with ",(0,a.kt)("a",{parentName:"p",href:"./min"},(0,a.kt)("inlineCode",{parentName:"a"},"min()"))," and ",(0,a.kt)("a",{parentName:"p",href:"./max"},(0,a.kt)("inlineCode",{parentName:"a"},"max()")),"."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"client = NdbClient()\nawait client.open('ws://127.0.0.1:1987/')\n\nsortedInts = SortedIntArrays(client)\nawait sortedInts.create('scores', 5)\nawait sortedInts.set_rng('scores', [50,102,95,64,22])\n\nscores = await sortedInts.get_rng('scores', start=0)\n\nprint(f'Ascending: {scores}')\nprint(f'Descending: {scores[::-1]}')\nprint(f'High: {scores[-1]}, '\n      f'Low: {scores[0]}, '\n      f'Top Three: {scores[-1:-4:-1]}')\n\n\n# get just the top three\nscores = await sortedInts.get_rng('scores', start=2)\nprint(f'Top Three with get_rng(): {scores[::-1]}')\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Ascending: [22, 50, 64, 95, 102]\nDescending: [102, 95, 64, 50, 22]\nHigh: 102, Low: 22, Top Three: [102, 95, 64]\nTop Three with get_rng(): [102, 95, 64]\n")))}d.isMDXComponent=!0}}]);