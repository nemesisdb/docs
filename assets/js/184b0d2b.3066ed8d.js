"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[6267],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>g});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),d=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},m=function(e){var t=d(e.components);return a.createElement(l.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,m=o(e,["components","mdxType","originalType","parentName"]),p=d(n),c=r,g=p["".concat(l,".").concat(c)]||p[c]||u[c]||i;return n?a.createElement(g,s(s({ref:t},m),{},{components:n})):a.createElement(g,s({ref:t},m))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,s=new Array(i);s[0]=c;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o[p]="string"==typeof e?e:r,s[1]=o;for(var d=2;d<i;d++)s[d]=n[d];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},6986:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var a=n(7462),r=(n(7294),n(3905));const i={sidebar_position:7,displayed_sidebar:"homeSidebar"},s="Run",o={unversionedId:"home/run",id:"home/run",title:"Run",description:"The bulk of the server config are set in a JSON config file, which is in preference to endless command line arguments.",source:"@site/docs/home/run.md",sourceDirName:"home",slug:"/home/run",permalink:"/home/run",draft:!1,tags:[],version:"current",sidebarPosition:7,frontMatter:{sidebar_position:7,displayed_sidebar:"homeSidebar"},sidebar:"homeSidebar",previous:{title:"Debian Package",permalink:"/home/install/package"},next:{title:"Configure",permalink:"/home/config"}},l={},d=[{value:"Arguments",id:"arguments",level:2},{value:"Examples",id:"examples",level:2},{value:"No Restore",id:"no-restore",level:3},{value:"Restore",id:"restore",level:3}],m={toc:d},p="wrapper";function u(e){let{components:t,...n}=e;return(0,r.kt)(p,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"run"},"Run"),(0,r.kt)("p",null,"The bulk of the server config are set in a JSON ",(0,r.kt)("a",{parentName:"p",href:"./config"},"config")," file, which is in preference to endless command line arguments."),(0,r.kt)("p",null,"The server includes a default config which starts the server on ",(0,r.kt)("inlineCode",{parentName:"p"},"127.0.0.1:1987"),". If this is unsuitable, change the ",(0,r.kt)("inlineCode",{parentName:"p"},"kv::ip")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"kv::port")," as required."),(0,r.kt)("h2",{id:"arguments"},"Arguments"),(0,r.kt)("p",null,"The command line arguments are preceeded with ",(0,r.kt)("inlineCode",{parentName:"p"},"--"),":"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Argument"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Required"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"config"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Y"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Path to the config file")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"loadName"),(0,r.kt)("td",{parentName:"tr",align:"center"},"N"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The name of a save point containing data to restore. The name would have been used with ",(0,r.kt)("inlineCode",{parentName:"td"},"SH_SAVE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"loadPath"),(0,r.kt)("td",{parentName:"tr",align:"center"},"N"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Path to directory containing the ",(0,r.kt)("inlineCode",{parentName:"td"},"loadName")," data. If not set, uses the ",(0,r.kt)("inlineCode",{parentName:"td"},"session::save::path")," in the config file")))),(0,r.kt)("br",null),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"When save is enabled the ",(0,r.kt)("inlineCode",{parentName:"li"},"path")," must exist and be a directory"),(0,r.kt)("li",{parentName:"ul"},"You can disable save but still restore data"))),(0,r.kt)("br",null),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"--loadPath")," is useful when the data was not saved by this instance so it is stored elsewhere")),(0,r.kt)("br",null),(0,r.kt)("p",null,"See ",(0,r.kt)("a",{parentName:"p",href:"./persist"},"Persist Data")," for more information on restoring."),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("h3",{id:"no-restore"},"No Restore"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Successful start"',title:'"Successful','start"':!0},"./nemesisdb --config=default.json\n\nNemesisDB v0.3.5 starting\nRegistering signals\nReading config\nReady\n")),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Can\'t find config file"',title:"\"Can't",find:!0,config:!0,'file"':!0},"./nemesisdb --config=dontexist.json\n\nNemesisDB v0.3.5 starting\nRegistering signals\nReading config\nConfig file path not found\n")),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Save enabled but path does not exist"',title:'"Save',enabled:!0,but:!0,path:!0,does:!0,not:!0,'exist"':!0},"./nemesisdb --config=default.json\n\nNemesisDB v0.3.5 starting\nRegistering signals\nReading config\nsession::save::path is not a directory or does not exist\n")),(0,r.kt)("br",null),(0,r.kt)("h3",{id:"restore"},"Restore"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Start and restore, using path in config"',title:'"Start',and:!0,"restore,":!0,using:!0,path:!0,in:!0,'config"':!0},'./nemesisdb --config=default.json --loadName=10k_10000\n\nNemesisDB v0.3.5 starting\nRegistering signals\nReading config\nLoad Path: "./data"\nLoad Name: 10k_10000\nReading metadata in "./data/10k_10000/1700433845873084066/md"\nLoading from "./data/10k_10000/1700433845873084066/data"\n-- Load --\nStatus: Success\nSessions: 10000\nKeys: 50000\nTime: 94ms\n----------\nReady\n')),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Start and restore, using explicit path"',title:'"Start',and:!0,"restore,":!0,using:!0,explicit:!0,'path"':!0},'./nemesisdb --config=default.json --loadName=mydata --loadPath=/some/other/path\n\nNemesisDB v0.3.5 starting\nRegistering signals\nReading config\nLoad Path: "/some/other/path"\nLoad Name: mydata\nReading metadata in "/some/other/path/mydata/1700433845873084066/md"\nLoading from "/some/other/path/data/mydata/1700433845873084066/data"\n-- Load --\nStatus: Success\nSessions: 10000\nKeys: 50000\nTime: 94ms\n----------\nReady\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"In this example, there must be a ",(0,r.kt)("inlineCode",{parentName:"li"},"mydata")," directory in ",(0,r.kt)("inlineCode",{parentName:"li"},"/some/other/path"),".")),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Load name does not exist"',title:'"Load',name:!0,does:!0,not:!0,'exist"':!0},'./nemesisdb --config=default.json --loadName=dontexist\n\nNemesisDB v0.3.5 starting\nRegistering signals\nReading config\nLoad Path: "./data"\nLoad Name: dontexist\nLoad name does not exist\n')),(0,r.kt)("br",null),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash",metastring:'title="Load name exists but contains no data"',title:'"Load',name:!0,exists:!0,but:!0,contains:!0,no:!0,'data"':!0},'./nemesisdb --config=default.json --loadName=emptydataset\n\nNemesisDB v0.3.5 starting\nRegistering signals\nReading config\nLoad Path: "./data"\nLoad Name: dump1\nNo data\n')))}u.isMDXComponent=!0}}]);