"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[5275],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>k});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),o=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=o(e.components);return r.createElement(p.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=o(n),c=a,k=m["".concat(p,".").concat(c)]||m[c]||d[c]||i;return n?r.createElement(k,l(l({ref:t},u),{},{components:n})):r.createElement(k,l({ref:t},u))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=c;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s[m]="string"==typeof e?e:a,l[1]=s;for(var o=2;o<i;o++)l[o]=n[o];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},1924:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>o});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:5},l="TS_CREATE_INDEX",s={unversionedId:"api/ts/ts-create-index",id:"api/ts/ts-create-index",title:"TS_CREATE_INDEX",description:"Creates an index in a time series.",source:"@site/docs/api/ts/ts-create-index.md",sourceDirName:"api/ts",slug:"/api/ts/ts-create-index",permalink:"/api/ts/ts-create-index",draft:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"apiSidebar",previous:{title:"TS_DELETE",permalink:"/api/ts/ts-delete"},next:{title:"TS_ADD_EVT",permalink:"/api/ts/ts-add-evt"}},p={},o=[{value:"Indexes",id:"indexes",level:2},{value:"Notes",id:"notes",level:2},{value:"Response",id:"response",level:2}],u={toc:o},m="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(m,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"ts_create_index"},"TS_CREATE_INDEX"),(0,a.kt)("p",null,"Creates an index in a time series."),(0,a.kt)("p",null,"Indexed members are required to use the ",(0,a.kt)("inlineCode",{parentName:"p"},"where")," in ",(0,a.kt)("inlineCode",{parentName:"p"},"TS_GET")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"TS_GET_MULTI"),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Param"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"ts"),(0,a.kt)("td",{parentName:"tr",align:"center"},"string"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Name for the series")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"key"),(0,a.kt)("td",{parentName:"tr",align:"center"},"string"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Name of a top level member to index")))),(0,a.kt)("br",null),(0,a.kt)("p",null,"Existing data in the time series is indexed before the response is returned. Thereafter it is updated on each call to ",(0,a.kt)("inlineCode",{parentName:"p"},"TS_ADD_EVT"),"."),(0,a.kt)("h2",{id:"indexes"},"Indexes"),(0,a.kt)("p",null,"Only top level event members can be indexed. For example, a time series which stores events for temperature and pressure sensor readings, could look like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "temperature":5.5,\n  "pressure":\n  {\n    "value":23\n  }\n}\n')),(0,a.kt)("p",null,"We can index ",(0,a.kt)("inlineCode",{parentName:"p"},"temperature")," but not ",(0,a.kt)("inlineCode",{parentName:"p"},"value")," because it is not a top level member. We must move ",(0,a.kt)("inlineCode",{parentName:"p"},"pressure")," to the top level:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "temperature":5.5,\n  "pressure": 23\n}\n')),(0,a.kt)("p",null,"Now we can index ",(0,a.kt)("inlineCode",{parentName:"p"},"temperature")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"pressure"),"."),(0,a.kt)("p",null,"With these members indexed they can be used in ",(0,a.kt)("inlineCode",{parentName:"p"},"TS_GET"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET":\n  {\n    "ts":["sensors"],\n    "rng":[1,3000],\n    "where":\n    {\n      "temperature":\n      {\n        ">":3.0\n      },\n      "pressure":\n      {\n        "[]":[15,25]\n      }\n    }\n  }\n}\n')),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},'This says, "Get the events which occured between times 1 and 3000 inclusive, where the temperature is greater then 3 ',(0,a.kt)("strong",{parentName:"li"},"and")," the pressure is between 15 and 25 inclusive.")),(0,a.kt)("h2",{id:"notes"},"Notes"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Not all events require to have the member present, i.e. in the above example, if an event object does not contain ",(0,a.kt)("inlineCode",{parentName:"li"},"temperature")," and/or ",(0,a.kt)("inlineCode",{parentName:"li"},"pressure")," members, it is not an error")),(0,a.kt)("h2",{id:"response"},"Response"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"TS_CREATE_INDEX_RSP")),(0,a.kt)("p",null,"See the ",(0,a.kt)("a",{parentName:"p",href:"./../TS-Statuses"},"response status")," page for status values."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:"left"},"Param"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,a.kt)("th",{parentName:"tr",align:"left"},"Meaning"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:"left"},"st"),(0,a.kt)("td",{parentName:"tr",align:"left"},"unsigned int"),(0,a.kt)("td",{parentName:"tr",align:"left"},"Status")))),(0,a.kt)("p",null,"Possible status values:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Ok"),(0,a.kt)("li",{parentName:"ul"},"SeriesNotExist"),(0,a.kt)("li",{parentName:"ul"},"IndexExists")))}d.isMDXComponent=!0}}]);