"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[5148],{3905:(e,t,n)=>{n.d(t,{Zo:()=>m,kt:()=>c});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),o=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},m=function(e){var t=o(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,s=e.parentName,m=p(e,["components","mdxType","originalType","parentName"]),u=o(n),k=r,c=u["".concat(s,".").concat(k)]||u[k]||d[k]||l;return n?a.createElement(c,i(i({ref:t},m),{},{components:n})):a.createElement(c,i({ref:t},m))}));function c(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p[u]="string"==typeof e?e:r,i[1]=p;for(var o=2;o<l;o++)i[o]=n[o];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},3145:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>p,toc:()=>o});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:15},i="TS_GET",p={unversionedId:"api/ts/ts-get",id:"api/ts/ts-get",title:"TS_GET",description:"Search a time series, returning time and event values.",source:"@site/docs/api/ts/ts-get.md",sourceDirName:"api/ts",slug:"/api/ts/ts-get",permalink:"/api/ts/ts-get",draft:!1,tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"apiSidebar",previous:{title:"TS_ADD_EVT",permalink:"/api/ts/ts-add-evt"},next:{title:"TS_GET_MULTI",permalink:"/api/ts/ts-get-multi"}},s={},o=[{value:"Where Clause",id:"where-clause",level:2},{value:"Operators",id:"operators",level:3},{value:"Examples",id:"examples",level:2},{value:"Response",id:"response",level:2}],m={toc:o},u="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"ts_get"},"TS_GET"),(0,r.kt)("p",null,"Search a time series, returning time and event values."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ts"),(0,r.kt)("td",{parentName:"tr",align:"center"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Name of the series")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"rng"),(0,r.kt)("td",{parentName:"tr",align:"center"},"array of ",(0,r.kt)("strong",{parentName:"td"},"zero or two")," times"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Empty array means search all times, otherwise a min and max are provided. The min and max are inclusive")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"where"),(0,r.kt)("td",{parentName:"tr",align:"center"},"One or multiple object"),(0,r.kt)("td",{parentName:"tr",align:"left"},(0,r.kt)("strong",{parentName:"td"},"Optional")," ",(0,r.kt)("br",null),"Each object key is the name of an event member which must be indexed, see below for details")))),(0,r.kt)("br",null),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TS_GET")," can be with or without ",(0,r.kt)("inlineCode",{parentName:"p"},"where"),". Without ",(0,r.kt)("inlineCode",{parentName:"p"},"where"),", all events are returned that meet the time ",(0,r.kt)("inlineCode",{parentName:"p"},"rng")," criteria."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Get everything in the whole time series")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET":\n  {\n    "ts":"sensors",\n    "rng":[]\n  }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Get everything between times 1000 and 1500 inclusive:")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET":\n  {\n    "ts":"sensors",\n    "rng":[1000,1500]\n  }\n}\n')),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"where-clause"},"Where Clause"),(0,r.kt)("p",null,"The ",(0,r.kt)("inlineCode",{parentName:"p"},"where")," clause defines conditions for event values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Each condition is a JSON object, with the key being the name of an indexed member (see ",(0,r.kt)("a",{parentName:"li",href:"/api/ts/ts-create-index"},(0,r.kt)("inlineCode",{parentName:"a"},"TS_CREATE_INDEX")),")"),(0,r.kt)("li",{parentName:"ul"},"The condition can contain one key which is an operator and its value (various JSON types)")),(0,r.kt)("p",null,'For example, with a timeseries called "sensors" and events containing a "temperature" member, we can search the whole range for events with ',(0,r.kt)("inlineCode",{parentName:"p"},"temperature")," greater than 3:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET":\n  {\n    "ts":"sensors",\n    "rng":[],\n    "where":\n    {\n      "temperature":\n      {\n        ">":3.0\n      }\n    }\n  }\n}\n')),(0,r.kt)("p",null,'Multiple conditions are possible and there\'s always a logical "and" relationship'),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET":\n  {\n    "ts":"sensors",\n    "rng":[],\n    "where":\n    {\n      "temperature":\n      {\n        ">":3.0\n      },\n      "pressure":\n      {\n        "<":55\n      }\n    }\n  }\n}\n')),(0,r.kt)("p",null,"This is ",(0,r.kt)("inlineCode",{parentName:"p"},"temperature > 3 && pressure < 55"),"."),(0,r.kt)("h3",{id:"operators"},"Operators"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Operator"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Value Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},">"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Number or array"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Greater than")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},">="),(0,r.kt)("td",{parentName:"tr",align:"center"},"Number or array"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Greater than or equal to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"<"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Number or array"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Less than")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"<="),(0,r.kt)("td",{parentName:"tr",align:"center"},"Number or array"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Less than or equal to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"=="),(0,r.kt)("td",{parentName:"tr",align:"center"},"Number, array, object, bool, string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Equal to")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"[]"),(0,r.kt)("td",{parentName:"tr",align:"center"},"Array of two numbers"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Range operator: ","[min, max]"," inclusive")))),(0,r.kt)("h2",{id:"examples"},"Examples"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Temperature range between 0 and 35.0 inclusive")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET":\n  {\n    "ts":"sensors",\n    "rng":[],\n    "where":\n    {\n      "temperature":\n      {\n        ">":[0.0,35.0]\n      }\n    }\n  }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A string array with specific values")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET":\n  {\n    "ts":"users",\n    "rng":[],\n    "where":\n    {\n      "devices_online":\n      {\n        "==":["192.168.0.10", "192.168.0.13", "192.168.0.12"]\n      }\n    }\n  }\n}\n')),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"A string array with specific values ",(0,r.kt)("em",{parentName:"li"},"but")," only in a specified time range (",(0,r.kt)("inlineCode",{parentName:"li"},"rng"),")")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "TS_GET":\n  {\n    "ts":"users",\n    "rng":[1000, 10000],\n    "where":\n    {\n      "devices_online":\n      {\n        "==":["192.168.0.10", "192.168.0.13", "192.168.0.12"]\n      }\n    }\n  }\n}\n')),(0,r.kt)("br",null),(0,r.kt)("h2",{id:"response"},"Response"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"TS_GET_RSP")),(0,r.kt)("p",null,"See the ",(0,r.kt)("a",{parentName:"p",href:"./../TS-Statuses"},"response status")," page for status values."),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Param"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,r.kt)("th",{parentName:"tr",align:"left"},"Meaning"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ts"),(0,r.kt)("td",{parentName:"tr",align:"left"},"string"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Name of the series")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"st"),(0,r.kt)("td",{parentName:"tr",align:"left"},"unsigned int"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Status")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"t"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Array of times"),(0,r.kt)("td",{parentName:"tr",align:"left"},"The times meeting the criteria")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"evt"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Array of objects"),(0,r.kt)("td",{parentName:"tr",align:"left"},"Each object is an event. The event at ",(0,r.kt)("inlineCode",{parentName:"td"},"evt[i]")," occured at time ",(0,r.kt)("inlineCode",{parentName:"td"},"t[i]"))))),(0,r.kt)("p",null,"Possible status values:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Ok"),(0,r.kt)("li",{parentName:"ul"},"SeriesNotExist"),(0,r.kt)("li",{parentName:"ul"},"NotIndexed")))}d.isMDXComponent=!0}}]);