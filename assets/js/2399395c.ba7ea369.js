"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[5547],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var a=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,o=function(e,t){if(null==e)return{};var n,a,o={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=a.createContext({}),c=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,o=e.mdxType,r=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=c(n),m=o,h=u["".concat(s,".").concat(m)]||u[m]||d[m]||r;return n?a.createElement(h,i(i({ref:t},p),{},{components:n})):a.createElement(h,i({ref:t},p))}));function h(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var r=n.length,i=new Array(r);i[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:o,i[1]=l;for(var c=2;c<r;c++)i[c]=n[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3538:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>r,metadata:()=>l,toc:()=>c});var a=n(7462),o=(n(7294),n(3905));const r={sidebar_position:1,displayed_sidebar:"homeSidebar"},i="Linux",l={unversionedId:"home/install/docker/linux",id:"home/install/docker/linux",title:"Linux",description:"Pull",source:"@site/docs/home/install/docker/linux.md",sourceDirName:"home/install/docker",slug:"/home/install/docker/linux",permalink:"/home/install/docker/linux",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,displayed_sidebar:"homeSidebar"},sidebar:"homeSidebar",previous:{title:"Docker",permalink:"/category/docker"},next:{title:"Windows",permalink:"/home/install/docker/windows"}},s={},c=[{value:"Pull",id:"pull",level:2},{value:"Start",id:"start",level:2},{value:"Default Config",id:"default-config",level:3},{value:"Custom Config",id:"custom-config",level:3},{value:"Stop",id:"stop",level:2}],p={toc:c},u="wrapper";function d(e){let{components:t,...n}=e;return(0,o.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"linux"},"Linux"),(0,o.kt)("h2",{id:"pull"},"Pull"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker pull nemesisdb/nemesisdb:latest\n")),(0,o.kt)("p",null,"Confirm:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker images\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"REPOSITORY            TAG       IMAGE ID       CREATED        SIZE\nnemesisdb/nemesisdb   0.3.2     6c2973cf3e57   5 hours ago    17.9MB\n")),(0,o.kt)("h2",{id:"start"},"Start"),(0,o.kt)("p",null,"On Linux, Docker containers can use the host's network which avoids having to map ports between host and container."),(0,o.kt)("p",null,"If you have Docker Desktop installed, you need to do this first:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker context use default\n")),(0,o.kt)("details",null,(0,o.kt)("summary",null,"What does this do"),(0,o.kt)("div",null,(0,o.kt)("div",null,"We need this because Docker Desktop on Linux runs within a VM, so the container will bind to the VM's virtual network rather than the host. Running this command tells Docker to use the 'default' context rather than the Docker Desktop, so the container can bind directly to the host's network ports.",(0,o.kt)("br",null),(0,o.kt)("br",null),"See ",(0,o.kt)("a",{href:"https://docs.docker.com/desktop/faqs/linuxfaqs/"},"here")," for more."))),(0,o.kt)("h3",{id:"default-config"},"Default Config"),(0,o.kt)("p",null,"The default config, included in the image, starts the server on ",(0,o.kt)("inlineCode",{parentName:"p"},"0.0.0.0:1987")," so it is available from the host at ",(0,o.kt)("inlineCode",{parentName:"p"},"127.0.0.1:1987"),"."),(0,o.kt)("p",null,"Start with:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -d --network host --name test1 nemesisdb/nemesisdb:latest\n")),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"rm")," deletes the container when you stop it. Omit ",(0,o.kt)("inlineCode",{parentName:"li"},"--rm")," to retain the container"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"d")," runs detached to avoid blocking the terminal. Replace with ",(0,o.kt)("inlineCode",{parentName:"li"},"-it")," to attach the container's terminal."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"network host")," tells the container to use the host's network stack, which avoids having to map ports between host and container (i.e. ",(0,o.kt)("inlineCode",{parentName:"li"},"-p 1987:1987"),")")),(0,o.kt)("p",null,"Confirm the server is running and its ports are bound to the host:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"netstat -tl | grep :1987\n")),(0,o.kt)("p",null,"You should have at least one entry:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"tcp        0      0 0.0.0.0:1987            0.0.0.0:*               LISTEN     \ntcp        0      0 0.0.0.0:1987            0.0.0.0:*               LISTEN     \ntcp        0      0 0.0.0.0:1987            0.0.0.0:*               LISTEN \n")),(0,o.kt)("h3",{id:"custom-config"},"Custom Config"),(0,o.kt)("p",null,"If you want to bind the server to a different IP/port you can pass the path to a config file on the host."),(0,o.kt)("p",null,"To do this you need to mount a volume so the container can see the config file using the ",(0,o.kt)("inlineCode",{parentName:"p"},"-v")," option."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker run --rm -d -v ./server/configs:/configs --network host --name test1 nemesisdb/nemesisdb:latest --config=/configs/config.json\n")),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"-v")," we want a volume mount"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},"./server/configs")," is the host path containing the config file"),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("inlineCode",{parentName:"li"},":/configs")," sets the mount ",(0,o.kt)("strong",{parentName:"li"},"within")," the container")),(0,o.kt)("p",null,"The final argument ",(0,o.kt)("inlineCode",{parentName:"p"},"--config=/configs/config.json")," is the full path. We use ",(0,o.kt)("inlineCode",{parentName:"p"},"/configs/")," because that's the mount point in the container (step 3)"),(0,o.kt)("admonition",{type:"tip"},(0,o.kt)("p",{parentName:"admonition"},"You can also set the ",(0,o.kt)("inlineCode",{parentName:"p"},"ro")," option to mount as read-only: ",(0,o.kt)("inlineCode",{parentName:"p"},"-v ./server/configs:/configs:ro"),".")),(0,o.kt)("h2",{id:"stop"},"Stop"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"docker stop test1\n")),(0,o.kt)("p",null,"If you started interactively (",(0,o.kt)("inlineCode",{parentName:"p"},"-it"),"), use ",(0,o.kt)("inlineCode",{parentName:"p"},"ctrl+c")," to stop."),(0,o.kt)("p",null,"This will also delete the container because the container was started with ",(0,o.kt)("inlineCode",{parentName:"p"},"--rm"),"."),(0,o.kt)("br",null))}d.isMDXComponent=!0}}]);