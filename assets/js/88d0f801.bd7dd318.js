"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[4721],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var o=a.createContext({}),p=function(e){var t=a.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=p(e.components);return a.createElement(o.Provider,{value:t},e.children)},c="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},k=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,o=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=p(n),k=r,m=c["".concat(o,".").concat(k)]||c[k]||d[k]||l;return n?a.createElement(m,i(i({ref:t},u),{},{components:n})):a.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=k;var s={};for(var o in t)hasOwnProperty.call(t,o)&&(s[o]=t[o]);s.originalType=e,s[c]="string"==typeof e?e:r,i[1]=s;for(var p=2;p<l;p++)i[p]=n[p];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}k.displayName="MDXCreateElement"},8429:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>s,toc:()=>p});var a=n(7462),r=(n(7294),n(3905));const l={sidebar_position:3,displayed_sidebar:"tutorialSidebar"},i="Set and Get",s={unversionedId:"tutorials/first-steps-kv/setandget",id:"tutorials/first-steps-kv/setandget",title:"Set and Get",description:"We'll store data of different types. With data types part of the JSON syntax, we don't have to care about types, only that the JSON is valid.",source:"@site/docs/tutorials/first-steps-kv/setandget.md",sourceDirName:"tutorials/first-steps-kv",slug:"/tutorials/first-steps-kv/setandget",permalink:"/tutorials/first-steps-kv/setandget",draft:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,displayed_sidebar:"tutorialSidebar"},sidebar:"tutorialSidebar",previous:{title:"Setup",permalink:"/tutorials/first-steps-kv/setup"},next:{title:"Persist",permalink:"/category/persist"}},o={},p=[{value:"String",id:"string",level:2},{value:"Array",id:"array",level:2},{value:"Multiple",id:"multiple",level:2},{value:"Get Data",id:"get-data",level:2},{value:"Clear Keys",id:"clear-keys",level:2},{value:"Object",id:"object",level:2},{value:"Get Object",id:"get-object",level:2},{value:"Conclusion",id:"conclusion",level:2}],u={toc:p},c="wrapper";function d(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"set-and-get"},"Set and Get"),(0,r.kt)("p",null,"We'll store data of different types. With data types part of the JSON syntax, we don't have to care about types, only that the JSON is valid."),(0,r.kt)("p",null,"To interact with data, the Key Value API is used. Its commands begin ",(0,r.kt)("inlineCode",{parentName:"p"},"KV_"),"."),(0,r.kt)("h2",{id:"string"},"String"),(0,r.kt)("p",null,"Send:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "KV_SET":\n  {\n    "keys":\n    {\n      "username":"Spongebob"\n    }\n  }\n}\n')),(0,r.kt)("p",null,"The stores the key ",(0,r.kt)("inlineCode",{parentName:"p"},"username"),' with string value "Spongebob".'),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"The ",(0,r.kt)("inlineCode",{parentName:"li"},"KV_SET_RSP")," response contains ",(0,r.kt)("inlineCode",{parentName:"li"},'"username": 20'),' which is the key and status. This confirms "username" was successfully set'),(0,r.kt)("li",{parentName:"ul"},"If you send the command again, the status will change to ",(0,r.kt)("inlineCode",{parentName:"li"},"21"),", which means an existing key has been overwritten (not an error)")),(0,r.kt)("h2",{id:"array"},"Array"),(0,r.kt)("p",null,"Send:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "KV_SET":\n  {\n    "keys":\n    {\n      "friends":["Crabs","Patrick"]\n    }\n  }\n}\n')),(0,r.kt)("p",null,"This stores a key, ",(0,r.kt)("inlineCode",{parentName:"p"},"friends"),", which is an array."),(0,r.kt)("h2",{id:"multiple"},"Multiple"),(0,r.kt)("p",null,"You can store multiple keys per request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "KV_SET":\n  {\n    "keys":\n    {\n      "email":"bob@thesea.com",\n      "age":10\n    }\n  }\n}\n')),(0,r.kt)("h2",{id:"get-data"},"Get Data"),(0,r.kt)("p",null,"To get keys use ",(0,r.kt)("inlineCode",{parentName:"p"},"KV_GET"),", which can get multiple keys in a single request:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "KV_GET":\n  {\n    "keys":["username", "email", "age", "friends"]\n  }\n}\n')),(0,r.kt)("p",null,"The response:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "KV_GET_RSP":\n  {\n    "keys":\n    {\n      "username": "Spongebob",\n      "email": "bob@thesea.com",\n      "age": 10,\n      "friends":\n      [\n        "Crabs",\n        "Patrick"\n      ]\n    }\n  }\n}\n')),(0,r.kt)("p",null,"But what if we want all this in a single key? We can use an object."),(0,r.kt)("h2",{id:"clear-keys"},"Clear Keys"),(0,r.kt)("p",null,"Start by clearing all keys:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "KV_CLEAR":{}\n}\n')),(0,r.kt)("p",null,"The reponse contains ",(0,r.kt)("inlineCode",{parentName:"p"},"cnt"),", confirming four keys were deleted."),(0,r.kt)("h2",{id:"object"},"Object"),(0,r.kt)("p",null,"Store the same data again but in an object:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "KV_SET":\n  {\n    "keys":\n    {\n      "profile":\n      {\n        "username": "Spongebob",\n        "friends": ["Crabs","Patrick"],\n        "email":"bob@thesea.com",\n        "age":10\n      }\n    }\n  }\n}\n')),(0,r.kt)("p",null,"This stores a key, ",(0,r.kt)("inlineCode",{parentName:"p"},"profile"),", which is an object. "),(0,r.kt)("h2",{id:"get-object"},"Get Object"),(0,r.kt)("p",null,"When we want the user's profile data, we just have to get one key:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "KV_GET":\n  {\n    "keys":["profile"]\n  }\n}\n')),(0,r.kt)("h2",{id:"conclusion"},"Conclusion"),(0,r.kt)("p",null,"That's the basics of setting and getting, other common commands are:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KV_ADD")," : does not overwrite the key if it already exists"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KV_COUNT")," : Return the number of keys present "),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KV_RMV")," : delete key(s)"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"KV_CLEAR_SET")," : clears all keys and sets new keys in a single command")),(0,r.kt)("br",null),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"It is not possible to get keys based on a pattern, the exact key name is required.")))}d.isMDXComponent=!0}}]);