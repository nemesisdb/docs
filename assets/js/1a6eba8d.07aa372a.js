"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[9234],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>v});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},k=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=o(e,["components","mdxType","originalType","parentName"]),c=p(n),k=a,v=c["".concat(s,".").concat(k)]||c[k]||u[k]||i;return n?r.createElement(v,l(l({ref:t},d),{},{components:n})):r.createElement(v,l({ref:t},d))}));function v(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,l=new Array(i);l[0]=k;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[c]="string"==typeof e?e:a,l[1]=o;for(var p=2;p<i;p++)l[p]=n[p];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}k.displayName="MDXCreateElement"},409:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>p});var r=n(7462),a=(n(7294),n(3905));const i={sidebar_position:4,displayed_sidebar:"clientApisSidebar",sidebar_label:"kv_add"},l="kv_add",o={unversionedId:"client_apis/python/kv/Add",id:"client_apis/python/kv/Add",title:"kv_add",description:"Stores keys but does not overwrite a key if it already exists.",source:"@site/docs/client_apis/python/kv/Add.md",sourceDirName:"client_apis/python/kv",slug:"/client_apis/python/kv/Add",permalink:"/client_apis/python/kv/Add",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,displayed_sidebar:"clientApisSidebar",sidebar_label:"kv_add"},sidebar:"clientApisSidebar",previous:{title:"kv_get",permalink:"/client_apis/python/kv/Get"},next:{title:"kv_rmv",permalink:"/client_apis/python/kv/Rmv"}},s={},p=[{value:"Returns",id:"returns",level:2},{value:"Examples",id:"examples",level:2}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"kv_add"},"kv_add"),(0,a.kt)("p",null,"Stores keys but does not overwrite a key if it already exists."),(0,a.kt)("p",null,"To overwrite an existing key, use ",(0,a.kt)("a",{parentName:"p",href:"./Set"},"kv_set"),"."),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Param"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Required"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"keys"),(0,a.kt)("td",{parentName:"tr",align:"center"},"tuple"),(0,a.kt)("td",{parentName:"tr",align:null},"Tuple of keys to retrieve"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Y")))),(0,a.kt)("p",null,"If a key already exists it is not considered an error."),(0,a.kt)("h2",{id:"returns"},"Returns"),(0,a.kt)("p",null,"None"),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Avoid overwriting'",title:"'Avoid","overwriting'":!0},"client = NdbClient()\nawait client.open('ws://127.0.0.1:1987/')\n\nawait client.kv_set({'LinuxDistro':'Arch'})\nvalues = await client.kv_get(('LinuxDistro',))\nprint(f'Before add(): {values}')\n\nawait client.kv_add({'LinuxDistro':'Arch btw'})\nvalues = await client.kv_get(('LinuxDistro',))\nprint(f'After add(): {values}')\n\nawait client.kv_set({'LinuxDistro':'Arch btw'})\nvalues = await client.kv_get(('LinuxDistro',))\nprint(f'After set(): {values}')\n")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kv_add()")," does not overwrite keys"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"kv_set()")," does overwrite keys")),(0,a.kt)("p",null,"Output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"Before add(): {'LinuxDistro': 'Arch'}\nAfter add(): {'LinuxDistro': 'Arch'}\nAfter set(): {'LinuxDistro': 'Arch btw'}\n")))}u.isMDXComponent=!0}}]);