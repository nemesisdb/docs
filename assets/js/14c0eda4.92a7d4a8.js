"use strict";(self.webpackChunknemesisdb=self.webpackChunknemesisdb||[]).push([[3758],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var i=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},r=Object.keys(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(i=0;i<r.length;i++)n=r[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=i.createContext({}),p=function(e){var t=i.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},d=function(e){var t=p(e.components);return i.createElement(o.Provider,{value:t},e.children)},c="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),c=p(n),m=a,k=c["".concat(o,".").concat(m)]||c[m]||u[m]||r;return n?i.createElement(k,s(s({ref:t},d),{},{components:n})):i.createElement(k,s({ref:t},d))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,s=new Array(r);s[0]=m;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[c]="string"==typeof e?e:a,s[1]=l;for(var p=2;p<r;p++)s[p]=n[p];return i.createElement.apply(null,s)}return i.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3635:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>l,toc:()=>p});var i=n(7462),a=(n(7294),n(3905));const r={sidebar_position:1,displayed_sidebar:"clientApisSidebar",sidebar_label:"sh_create"},s="sh_create",l={unversionedId:"client_apis/python/sh/Create",id:"client_apis/python/sh/Create",title:"sh_create",description:"Creates a new session.",source:"@site/docs/client_apis/python/sh/Create.md",sourceDirName:"client_apis/python/sh",slug:"/client_apis/python/sh/Create",permalink:"/client_apis/python/sh/Create",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1,displayed_sidebar:"clientApisSidebar",sidebar_label:"sh_create"},sidebar:"clientApisSidebar",previous:{title:"Quick Start",permalink:"/client_apis/python/sh/Quick-Start"},next:{title:"sh_end",permalink:"/client_apis/python/sh/End"}},o={},p=[{value:"Returns",id:"returns",level:2},{value:"Examples",id:"examples",level:2}],d={toc:p},c="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(c,(0,i.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"sh_create"},"sh_create"),(0,a.kt)("p",null,"Creates a new session."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"sh_create(durationSeconds = 0,\n                  deleteSessionOnExpire = False,\n                  extendOnSetAdd = False,\n                  extendOnGet = False) -> Session\n")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Param"),(0,a.kt)("th",{parentName:"tr",align:null},"Description"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"durationSeconds"),(0,a.kt)("td",{parentName:"tr",align:null},"Time in seconds until the session expires. Default ",(0,a.kt)("inlineCode",{parentName:"td"},"0")," (never expires)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"deleteSession"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"true"),": session is deleted when it expires",(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"false"),": only the keys are deleted (default)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"extendOnSetAdd"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"true"),": on each set or add, the expire time is extended by ",(0,a.kt)("inlineCode",{parentName:"td"},"duration"),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"false"),": default")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"extendOnGet"),(0,a.kt)("td",{parentName:"tr",align:null},(0,a.kt)("inlineCode",{parentName:"td"},"true"),": on each get, the expire time is extended by ",(0,a.kt)("inlineCode",{parentName:"td"},"duration"),(0,a.kt)("br",null),(0,a.kt)("inlineCode",{parentName:"td"},"false"),": default")))),(0,a.kt)("p",null,"A session is uniquely identified by a session token (typically referred to in the API as ",(0,a.kt)("inlineCode",{parentName:"p"},"tkn"),"), which is a 64-bit unsigned integer."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"client = NdbClient()\nawait client.open('ws://127.0.0.1:1987/')\n\nsession = await client.sh_create()\n\nawait client.set(session.tkn, {'key1':'value1'})\n")),(0,a.kt)("p",null,"Sets the key in that session."),(0,a.kt)("p",null,"To get key(s) from a session use ",(0,a.kt)("inlineCode",{parentName:"p"},"sh_get()"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py"},"client.get(session.tkn, keys=('k1','k2'))\n")),(0,a.kt)("h2",{id:"returns"},"Returns"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Session")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"If the command was success ",(0,a.kt)("inlineCode",{parentName:"li"},"session.tknValid")," is ",(0,a.kt)("inlineCode",{parentName:"li"},"True"),", otherwise ",(0,a.kt)("inlineCode",{parentName:"li"},"False")),(0,a.kt)("li",{parentName:"ul"},"If successful, the token is set in ",(0,a.kt)("inlineCode",{parentName:"li"},"Session.tkn"))),(0,a.kt)("br",null),(0,a.kt)("h1",{id:"raises"},"Raises"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ResponseError")," if the query fails"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"ValueError")," if:",(0,a.kt)("ol",{parentName:"li"},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"durationSeconds")," is less than 0"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"durationSeconds")," is 0 but ",(0,a.kt)("inlineCode",{parentName:"li"},"deleteSessionOnExpire"),", ",(0,a.kt)("inlineCode",{parentName:"li"},"extendOnSetAdd")," or ",(0,a.kt)("inlineCode",{parentName:"li"},"extendGet")," are ",(0,a.kt)("inlineCode",{parentName:"li"},"true"),".\nThis is because when ",(0,a.kt)("inlineCode",{parentName:"li"},"durationSeconds")," is 0, the session cannot expire, so these have no effect ")))),(0,a.kt)("h2",{id:"examples"},"Examples"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"NdbClient")," is not coupled to a particular session, so the token(s) must be supplied where required."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Create a session'",title:"'Create",a:!0,"session'":!0},"from ndb.sessionclient import SessionClient\n\n\nclient = SessionClient()\nawait client.open('ws://127.0.0.1:1987/')\n\nsession = await client.sh_create()\nif session.tknValid:\n  print(f'Session created with token {session.tkn}')\nelse\n  print('Fail')\n")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-py",metastring:"title='Create multiple sessions'",title:"'Create",multiple:!0,"sessions'":!0},"from ndb.sessionclient import SessionClient\n\n\nclient = SessionClient()\nawait client.open('ws://127.0.0.1:1987/')\n\nsession1 = await client.sh_create()\nsession2 = await client.sh_create()\n\nif session1.isValid and session2.isValid:\n  print(f'Session 1 token {session1.token}')\n  print(f'Session 2 token {session2.token}')\nelse\n  print('Fail')\n")))}u.isMDXComponent=!0}}]);